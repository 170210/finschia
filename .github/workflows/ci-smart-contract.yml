name: CI
#  Tests / Code Coverage workflow runs unit tests and uploads a code coverage report
#  This workflow is run on pushes to master & every Pull Requests where a .go, .mod, .sum have been changed
on: push
#  pull_request:
#  push:
#    branches:
#      - main

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"

  check-diffs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get diff
        id: getDiff
        uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
            .github/workflows/ci-smart-contract.yml

  build:
    needs: check-diffs
    runs-on: ubuntu-latest
    #    if: ${{ needs.check-diffs.output.diff }}
    strategy:
      matrix:
        go-arch: ["amd64"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.18
      - name: Build
        run: GOARCH=${{ matrix.go-arch }} LEDGER_ENABLED=false make build
      - name: debug
        run: ls -al
      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: fnsad
          path: ./build/fnsad

  get-cosmwasm-releases:
    runs-on: ubuntu-latest
    outputs:
      cosmwasm-versions: ${{ steps.cosmwasm-releases.outputs.versions }}
    steps:
      - uses: actions/checkout@v3
      - name: Get cosmwasm releases
        id: cosmwasm-releases
        run: |
          response=$(curl -s "https://api.github.com/repos/Finschia/cosmwasm/releases")
          versions=$(echo "$response" | jq -r '[.[].tag_name]' | jq -c .)
          echo "versions=$versions" >> "$GITHUB_OUTPUT"
  # debug:
  #   runs-on: ubuntu-latest
  #   needs: get-cosmwasm-releases
  #   steps:
  #     - name: debug
  #       run: echo ${{ needs.get-cosmwasm-releases.outputs.cosmwasm-versions }}
  tests-smart-contract-on-local-node:
#  if: env.GIT_DIFF
    runs-on: ubuntu-latest
    needs: [build, get-cosmwasm-releases]
    strategy:
      matrix:
        release-version: ${{ needs.get-cosmwasm-releases.outputs.cosmwasm-versions }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.18
      - name: Download smart contracts
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'Finschia/cosmwasm'
          version: tags/${{ matrix.release-version }}
          regex: true
          file: '.*'
          target: 'contracts/'
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: fnsad
          path: ./build
      - name: debug
        run: |
          ls -al
          cd ./contracts
          ls -al
          cd ../
      - name: build install
        run: make install
      - name: set configure file
        run: ./init_single.sh
        shell: bash
      - name: start local node
        id: fnsad_start
        run: |
          fnsad start &
          sleep 1
      - name: test
        run: bash ./ci_test/queue_ci.sh
        shell: bash
      - name: fnsad stop
        if: ${{ always() && steps.fnsad_start.conclusion == 'success' }}
        run: |
          echo $(curl -s localhost:26657/status | jq -r '.result.sync_info.latest_block_height')
          kill $(ps -ef | grep "fnsad start" | grep -v grep | awk '{print $2}')

  tests-smart-contract-on-docker:
    runs-on: ubuntu-latest
    needs: get-cosmwasm-releases
    steps:
      - uses: actions/checkout@v3
      - name: docker build
        run: |
          cat Makefile | grep "build-docker"
          cat Makefile | grep "docker-build"

          make docker-build